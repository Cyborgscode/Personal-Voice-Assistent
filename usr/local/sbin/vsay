#!/bin/bash

# THIS FILE IS JUST A BASE TEMPLATE
# IT'S not possible to supply a full script, due to the nature of the usecase it solves ;)
#

# SYNTAX:
#
# vsay "Hello world!"
# vsay --speed 0.5 "Hello world!"
# VOICE=Terminator vsay "Hello world!"

cd /tmp	
mkdir -p tests

# EXAMPLE GERMAN speech package

# P="/usr/share/pva/f5-tts/marduk-german/f5_tts_german_1010000.safetensors"
# V="/usr/share/pva/f5-tts/marduk-german/vocab.txt"
#
# you can find those files here: https://huggingface.co/marduk-ra/F5-TTS-German/tree/main
#
# English users do not need those:
  
P=""
V=""
  
NOCACHE=0

# Place a 10s default.wav file and a default.txt containing the transscript of the spoken text in SLOC_:

SLOC="/usr/share/pva/f5-tts/voices"

# Adjust the speed if necessary by default:
  
SPEED="1.0"
filename="default"

if [ "$VOICE" != "" ]; then
	if [ -e "$SLOC/$VOICE.wav" ]; then
		filename="$VOICE"
	fi
fi 

# or correct the speed live

if [ "$1" == "--speed" ]; then
	SPEED="$2"
	shift
	shift
fi 

# if set NOCACHE does not save the produces wav file as mp3 in the cache.

if [ "$1" == "--nocache" ]; then
	NOCACHE=1
	shift
fi 

# Check if, via VOICE env variable or first argument,  a valid voice profile is named
# and use that, instead of the default.wav
  
if [ -e "$SLOC/$1.wav" ]; then
	filename="$1"
	shift
fi

# If no spoken text transcription is supplied, load the .txt file
  
if [ "$S" == "" ]; then
	S="$(cat "$SLOC/$filename.txt")"	
fi

R="$SLOC/$filename.wav"

## EXAMPLE for an indiviual speed change

if [ "$filename" == "Terminator" ]; then
	SPEED="0.7"
fi 

# adaptions for the GERMAN custom model 

TEXT=$(echo "$1" | sed -r 's/\.([^ $])/\1/g' | sed -r 's/,([^ $])/ komma \1/g')

HASH=$(echo "$filename$TEXT"| sha256sum | sed -e "s/ .*$//g")

# SPEED HACK in case we already created that exact sentence with the selected voice,
# otherwise create and store the created answere as mp3 in the cache.
  
if [ -e $HOME/.cache/pva/audio/$HASH.mp3 ];then

	play $HOME/.cache/pva/audio/$HASH.mp3  tempo 1 >/dev/null 2>/dev/null

else 
	echo "$HOME/.cache/pva/audio/$HASH.mp3"
	f5-tts_infer-cli --speed $SPEED -m F5-TTS -p '$P' -v '$V' -r "$R" -s "$S" -t "$TEXT" 2>/dev/null 1>/dev/null
	play tests/infer_cli_out.wav >/dev/null 2>/dev/null
	if [ "$NOCACHE" -eq "0" ]; then 
		lame -V 5 -b 64 -B 224 tests/infer_cli_out.wav $HOME/.cache/pva/audio/$HASH.mp3 >/dev/null 2>/dev/null
	fi
	rm -f tests/*wav
	
fi

